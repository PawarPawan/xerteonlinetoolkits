	<PG name="gapFill">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);pageIcon.templateData = myXML.toObject();rootIcon.setTitleText(templateData.learningObject[0].name);ts = STYLES.inputSize;//icon.parentNode.getChildByName('passage').attributes.textSize = ts;//icon.parentNode.getChildByName('lbls').attributes.textSize = ts;panelWidth = pageIcon.templateData.gapFill[0].panelWidth;if (panelWidth == "Small"){  panelW = 300;  textW = 440;} else if (panelWidth == "Medium"){  panelW = 450;  textW = 290;} else if (panelWidth == "Large"){  panelW = 600;  textW = 150;} else {  panelW = 760;  textW = 0;}]]></SCR>		<DIS h="474" w="panelW" tabIndex="-1" id="panel" name="panel" x="780 - panelW" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DIS id="textBlock" h="10" name="text" x="20" y="20" w="textW" type="text"><![CDATA[{pageIcon.templateData.gapFill[0].text}]]></DIS>		<DIS tabIndex="-1" textColour="#333333" id="mainText" name="passage" x="panel._x + 20;" y="panel._y + 20" w="panelW - 40" h="10" type="text"><![CDATA[{pageIcon.templateData.gapFill[0].passage}]]></DIS>		<SCR name="makeInteraction"><![CDATA[wp = icon.parentNode.clip();w = mainText.breakApart(3,7,false,false);str = "";targets = new Array();n = 0;for (i = 0; i < w.length; i++){  w[i].tabIndex = -1;  //blank this word?  if (w[i].txt.text.substr(0,1) == '|'){    w[i].beginFill(0xFFFFCC,100);    w[i].drawRect(0,0,w[i]._width,Number(ts) + 7);        word = w[i].txt.text.substr(1,w[i].txt.text.length - 2);    str +=  word + ' ' ;    w[i].txt.text = "";    w[i].word = word;    targets.push(w[i]);  }}]]></SCR>		<DIS tabIndex="-1" textColour="#FF0000" id="lbls" name="lbls" x="mainText._x" y="mainText._y + mainText._height + 10" w="400" h="10" type="text"><![CDATA[{str}]]></DIS>		<SCR name="makeInteraction"><![CDATA[//what type of interaction is this?if (pageIcon.templateData.gapFill[0].interactivity == 'Drag Drop'){  labels = lbls.breakApart(13,33,true,true);    for (i = 0; i < labels.length; i++){    labels[i].word = labels[i].txt.text;  }    //randomise position  labels.randomize();  initX = 0;  initY = 0;  for (i = 0; i < labels.length; i++){      labels[i]._x = initX;    labels[i]._y = initY;      initX += labels[i]._width + 3;      if (initX > mainText._width){      initX = 0;      initY += 20;    }    //store the initX and Y for replacement    labels[i].initX = labels[i]._x;    labels[i].initY = labels[i]._y;  }  if (icon.attributes.built != 'true'){    icon.nextSibling.firstChild.removeNode();    icon.attributes.built = 'true';  }} else {  lbls.removeMovieClip();  icon.nextSibling.childNodes[i].removeNode();  if (icon.attributes.built != 'true'){    icon.nextSibling.firstChild.duplicate(targets.length - 1);    icon.attributes.built = 'true';    for ( i = 0; i < targets.length; i++){      icon.nextSibling.childNodes[i].attributes.phrase = targets[i].word;    }  }}lbls.tabChildren = false;count = 0;]]></SCR>		<INT id="gapInt" name="mainInteraction" perpetual="0">			<RES name="protoTextEntry" type="textEntry" x="mainText._x + targets[icon.index()]._x" y="mainText._y + targets[icon.index()]._y" w="targets[icon.index()]._width" h="100" phrase="coded" scrolling="0" border="1" erase="1" exit="0">				<SCR name="onMatch"><![CDATA[tf = icon.parentNode.clip();tf.border = false;tf.type = "dynamic";tf.htmlText = '<font color="#006600">' + tf.text + '</font>';count++;Selection.setFocus(icon.parentNode.nextSibling.clip());if (count == targets.length){  gapInt.broadcast("showFeedback");}]]></SCR>			</RES>			<RES name="onWordDropped" type="event" eventName="onWordDropped" icon="lbls" erase="1" exit="0">				<SCR name="test"><![CDATA[//check all targetssuccess = false;for (i = 0; i < targets.length; i++){  if (lbls.wordDropped.hitTest(targets[i]) && lbls.wordDropped.word == targets[i].word){    matchedTarget = targets[i];    success = true;    count++;  }}if (success == true){  lbls.wordDropped._x = matchedTarget._x - (lbls._x - mainText._x) + 4;  lbls.wordDropped._y = matchedTarget._y - (lbls._y - mainText._y);  lbls.wordDropped.onPress = fnull;  lbls.wordDropped.useHandCursor = false;  lbls.wordDropped.colourText('#006600');} else {  lbls.wordDropped.animate(lbls.wordDropped.initX,lbls.wordDropped.initY,10,'quadBez',1);}if (count == targets.length){  gapInt.broadcast("showFeedback");}]]></SCR>			</RES>			<RES name="showFeedback" type="event" eventName="showFeedback" icon="gapInt" erase="1" exit="0">				<DIS transition="wipe('in', 0.5, 'None', 'easeNone')" name="feedback" x="panel._x + 20" y="mainText._y + mainText._height + 20" w="400" h="10" type="text"><![CDATA[{pageIcon.templateData.gapFill[0].feedback}]]></DIS>			</RES>		</INT>	</PG>