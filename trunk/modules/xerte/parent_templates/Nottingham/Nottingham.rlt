	<LO language="en-GB" description="A flexible template for creating interactive learning objects" targetFolder="Nottingham" version="1.0" styleSheet="templatePath + 'common/styles.css'" inputColour="0xFFFFCC" selectableText="1" templateData="FileLocation + 'template.xml'" name="Xerte Online Toolkit">		<SCR name="makePages"><![CDATA[//loop through the xml and insert a page of the right type for each page typeifc = icon.nextSibling;linkIndex = -1;if (templateData.learningObject[0].navigation.indexOf('Menu') != -1 && templateData.learningObject[0].navigation != undefined ){  pgOffset = 2;  newXML = new XML('<PG model="templatePath + \'models/menu.rlm\'"/>');  newChild = newXML.firstChild;  newChild.attributes.title = 'Main Menu';  newChild.attributes.linkID = extXML.firstChild.childNodes[i].attributes.linkID;      ifc.appendChild(newChild);  } else {  pgOffset = 1;}//custom interfaceif (templateData.learningObject[0].controller != undefined){  icon.nextSibling.attributes.swf = templateData.learningObject[0].controller;  icon.nextSibling.attributes.visuals = 0;}//help fileif (templateData.learningObject[0].nfo != undefined){  icon.nextSibling.attributes.helpfile = templateData.learningObject[0].nfo;}//default text sizeif (templateData.learningObject[0].textSize != undefined){  STYLES.defaultSize = templateData.learningObject[0].textSize;  STYLES.inputSize = templateData.learningObject[0].textSize;}//change page title size for all pages if optional property setif (templateData.learningObject[0].allpagestitlesize != undefined){STYLES.pageTitleSize = templateData.learningObject[0].allpagestitlesize;}//media/transcript filesif (templateData.learningObject[0].media != undefined){  icon.nextSibling.attributes.mediafile = templateData.learningObject[0].media;  if (templateData.learningObject[0].mediaImage != undefined){    icon.nextSibling.attributes.mediaImage = templateData.learningObject[0].mediaImage;  }  if (templateData.learningObject[0].mediaTranscript != undefined){    icon.nextSibling.attributes.mediaTranscript = templateData.learningObject[0].mediaTranscript;  }}for (i = 0; i < extXML.firstChild.childNodes.length; i++){  //build this file dynamically  modName = extXML.firstChild.childNodes[i].nodeName;    if (modName == 'xerteModel'){    newXML = new XML('<PG model="' + extXML.firstChild.childNodes[i].attributes.modelFile + '"/>');    //is there an initObject...?    if (extXML.firstChild.childNodes[i].attributes.initObject != undefined){      newXML.firstChild.attributes.initObject = extXML.firstChild.childNodes[i].attributes.initObject;    }  } else {    newXML = new XML('<PG model="templatePath + \'models/' + modName + '.rlm\'"/>');  }  newChild = newXML.firstChild;  newChild.attributes.title = extXML.firstChild.childNodes[i].attributes.name;  newChild.attributes.linkID = extXML.firstChild.childNodes[i].attributes.linkID;    if (extXML.firstChild.childNodes[i].attributes.linkID == _level0.linkID && extXML.firstChild.childNodes[i].attributes.linkID != undefined){    linkIndex = i;  }  ifc.appendChild(newChild);}//glossaryif (templateData.learningObject[0].glossary != undefined){  Glossary.enabled = true;  items = templateData.learningObject[0].glossary.split('||');  for (i = 0; i < items.length; i++){    Glossary.addTerm(items[i].split('|')[0], items[i].split('|')[1]);  }}]]></SCR>		<IFC name="interface" title="rtryr" visuals="1">			<FW_ENT id="entryFrame" name="background">				<SCR name="backgroundImage"><![CDATA[if (templateData.learningObject[0].background != undefined){  if(templateData.learningObject[0].backgroundopacity != undefined){    alpha = templateData.learningObject[0].backgroundopacity;  } else {    alpha = 15;  }  rootIcon.loadBackground(templateData.learningObject[0].background, alpha);}//stylesheetif (templateData.learningObject[0].stylesheet != undefined){  rootIcon.loadStyleSheet(expression(templateData.learningObject[0].stylesheet, this));}]]></SCR>				<SCR isFunc="1" name="navToPage"><![CDATA[for (i = 0; i < extXML.firstChild.childNodes.length; i++){  if (extXML.firstChild.childNodes[i].attributes.name == args[0]){    if (pgOffset == 2){        rootIcon.gotoPage(i+1);    } else {      rootIcon.gotoPage(i);    }  }}]]></SCR>				<SCR name="setup"><![CDATA[if (templateData.learningObject[0].ic != undefined){  rootIcon.loadIcon(expression(templateData.learningObject[0].ic, engine));}entryFrame.swapDepths(999);btnPos = new Array(740, 690, 640, 590, 540);if (templateData.learningObject[0].navigation.indexOf('Menu') != 0)[// || templateData.learningObject[0].navigation != undefined ){  icon.nextSibling.firstChild.removeNode();  } else {  rootIcon.setNavigationStyle('menu');  if (templateData.learningObject[0].navigation == 'Menu'){    currentBtn = 0;        rootIcon.hideControls();    rootIcon.tocBtn._visible = true;    rootIcon.tocBtn._x = btnPos[currentBtn];    toc = rootIcon.tocBtn;    currentBtn++;        if (templateData.learningObject[0].nfo != undefined){      rootIcon.helpBtn._visible = true;      rootIcon.helpBtn._x = btnPos[currentBtn];      currentBtn++;    }        if (templateData.learningObject[0].media != undefined) {      rootIcon.mediaBtn._visible = true;      rootIcon.mediaBtn._x = btnPos[currentBtn];    }  }  if (templateData.learningObject[0].navigation == 'Menu with Page Controls'){    rootIcon.hideControls();    currentBtn = 0;        rootIcon.nextBtn._visible = true;    rootIcon.nextBtn._x = btnPos[currentBtn];    currentBtn++;        rootIcon.tocBtn._visible = true;    rootIcon.tocBtn._x = btnPos[currentBtn];    toc = rootIcon.tocBtn;    currentBtn++;            rootIcon.backBtn._visible = true;    rootIcon.backBtn._x = btnPos[currentBtn];    currentBtn++;        if (templateData.learningObject[0].nfo != undefined){      rootIcon.helpBtn._visible = true;      rootIcon.helpBtn._x = btnPos[currentBtn];      currentBtn++;    }        if (templateData.learningObject[0].media != undefined) {      rootIcon.mediaBtn._visible = true;      rootIcon.mediaBtn._x = btnPos[currentBtn];    }  }}]]></SCR>				<INT id="myInt" name="narrationHandlers" perpetual="1">					<RES name="mainMenu" type="event" eventName="onRelease" icon="rootIcon.tocBtn" erase="1" exit="0">						<SCR name="gotoMenu"><![CDATA[rootIcon.gotoPage(0);]]></SCR>					</RES>					<RES name="showAudio" type="event" eventName="showAudio" icon="rootIcon" erase="1" exit="0">						<SND id="nar" controls="25,0,975" name="narration" type="ext" url="{narration}" play="0" loop="0" wait="0" />						<SCR name="setup"><![CDATA[nar._y = -14;nar._x = 0;nar._yscale =  80;nar._xscale =  80;nar.clear();nar.beginFill(STYLES.titleBarColour,100);nar.drawRect(22,0,130,20);]]></SCR>						<INT name="handleAutoNaviagate" perpetual="0">							<RES name="onLoad" type="event" eventName="onLoad" icon="nar" erase="1" exit="0">								<SCR name="onLoad"><![CDATA[//play automatically?if (myXML.firstChild.attributes.playNarration == 'true'){  nar.play();}]]></SCR>							</RES>							<RES name="onSoundComplete" type="event" eventName="onSoundComplete" icon="nar" erase="1" exit="0">								<SCR name="moveOn"><![CDATA[if (myXML.firstChild.attributes.narrationNavigate == 'true'){  rootIcon.nextPage();}]]></SCR>							</RES>						</INT>					</RES>					<RES name="killPopUps" type="event" eventName="onClosePage" icon="rootIcon" erase="1" exit="0">						<SCR name="hideNarration"><![CDATA[if (popupActive == true){  callJS("killPopUp");  popupActive = false;}]]></SCR>					</RES>				</INT>				<COM id="cpad" name="characterPad" url="templatePath + 'common/charPad.swf'" initObject="{language: templateData.learningObject[0].kblanguage}" />				<INT name="onInitHandler" perpetual="0">					<RES name="onInit" type="event" eventName="onInit" icon="rootIcon" erase="1" exit="0">						<SCR name="jump"><![CDATA[rootIcon.preloadMedia();if (templateData.learningObject[0].displayMode != undefined){  rootIcon.setDisplayMode(templateData.learningObject[0].displayMode);}if (linkIndex != -1){  rootIcon.gotoPage(linkIndex);}]]></SCR>					</RES>				</INT>			</FW_ENT>		</IFC>		<BIN myLongVarName="A variable for tracking the user" name="Deleted Items" />	</LO>